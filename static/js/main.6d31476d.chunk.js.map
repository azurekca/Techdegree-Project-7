{"version":3,"sources":["config.js","Components/HeroImage.js","Components/Home.js","Components/MainNav.js","Components/SearchSVG.js","Components/SearchForm.js","Components/Photo.js","Components/PhotoContainer.js","Components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["API_KEY","HeroImage","props","src","alt","credit","cssClass","className","Home","MainNav","handleLoading","to","onClick","SearchSVG","fill","height","viewBox","width","xmlns","d","SearchForm","searchInput","React","createRef","handleSubmit","event","preventDefault","path","current","value","history","push","currentTarget","reset","onSubmit","this","ref","type","name","placeholder","required","Component","withRouter","Photo","photo","farm","server","id","secret","title","PhotoContainer","newQuery","match","params","query","oldQuery","console","log","performSearch","loading","photos","jsx","length","map","key","process","NotFound","App","state","bool","setState","fetch","then","response","json","responseData","catch","error","render","exact","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6d31476d.chunk.js","sourcesContent":["const API_KEY = '9a9c051c1be2f24a227172db1183724e';\r\n// const secret = '84bb27d670c1177e';\r\nexport default API_KEY;","import React from 'react';\r\n\r\nconst HeroImage = (props) => {\r\n  const {src, alt, credit, cssClass} = props;\r\n  return (\r\n      <figure className=\"hero-image\">\r\n        <img className={cssClass} src={src} alt={alt}></img>\r\n        <figcaption>\r\n          <span className=\"image-credit\">{credit}</span>\r\n        </figcaption>\r\n      </figure>\r\n  )\r\n}\r\n\r\nexport default HeroImage;","import React from 'react';\r\nimport HeroImage from './HeroImage';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main className=\"photo-container\">\r\n      <HeroImage\r\n        src=\"https://live.staticflickr.com/5263/5866516990_c0153ee3aa_c.jpg\"\r\n        alt=\"Le pays du vent\"\r\n        credit=\"Photo by paul Siemen\"\r\n        cssClass=\"shadow\"\r\n      />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MainNav = ({handleLoading}) => (\r\n\t<nav className=\"main-nav\">\r\n\t\t<ul>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/search/rock\" onClick={handleLoading}>Rock</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/search/paper\" onClick={handleLoading}>Paper</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/search/scissors\" onClick={handleLoading}>Scissors</NavLink>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</nav>\r\n);\r\n\r\nexport default MainNav;\r\n","import React from 'react';\r\n\r\nconst SearchSVG = () => (\r\n  <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\r\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n  </svg>\r\n);\r\n\r\nexport default SearchSVG;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport SearchSVG from './SearchSVG';\r\n\r\nclass SearchForm extends Component {\r\n\r\n  searchInput = React.createRef();\r\n  \r\n  handleSubmit = event => {\r\n    // prevent page refresh\r\n    event.preventDefault();\r\n\r\n    // perform search by adding search to history\r\n    // this works by setting loading state to true; triggers re-render\r\n    // PhotoContainer handles updated url and triggers fetching new data \r\n    const path = `/search/${this.searchInput.current.value}`;\r\n    this.props.handleLoading();\r\n    this.props.history.push(path);\r\n\r\n    // reset form input\r\n    event.currentTarget.reset();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"search-form\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          ref={this.searchInput}\r\n          type=\"search\"\r\n          name=\"search\"\r\n          placeholder=\"Search\"\r\n          required/>\r\n        <button type=\"submit\" className=\"search-button\">\r\n          <SearchSVG />\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(SearchForm);","import React from 'react';\r\n\r\nconst Photo = ({photo}) => (\r\n  <li>\r\n    <img\r\n      src={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`} \r\n      alt={photo.title} />\r\n  </li>\r\n);\r\n\r\nexport default Photo;","import React, { Component } from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n// React Components\r\nimport Photo from './Photo';\r\nimport HeroImage from './HeroImage';\r\n\r\nclass PhotoContainer extends Component {\r\n\r\n  // check if url query parameter changed, fetch new data if it did, set loading state to false if it did not\r\n  componentDidUpdate() {\r\n    const newQuery = this.props.match.params.query;\r\n    const oldQuery = this.props.query;\r\n    console.log(newQuery, oldQuery)\r\n    if (newQuery !== oldQuery) {\r\n     this.props.performSearch(this.props.match.params.query);\r\n    } else if (this.props.loading) {\r\n      this.props.handleLoading(false);\r\n    }\r\n  }\r\n\r\n  // fetch new data when component mounts\r\n  componentDidMount() {\r\n    this.props.performSearch(this.props.match.params.query);\r\n  }\r\n\r\n  render() {\r\n    const photos = this.props.photos\r\n    let jsx = '';\r\n    let title;\r\n    \r\n    if (this.props.loading) {\r\n      title='Loading...';\r\n    } else if (photos.length > 0) {\r\n      title = 'Results'\r\n      jsx = photos.map(photo => {\r\n        console.log(photo);\r\n        return <Photo photo={photo} key={photo.id}/>\r\n      })\r\n    } else {\r\n      jsx = (\r\n        <HeroImage\r\n          src={process.env.PUBLIC_URL + \"/nothing_to_see_here.jpg\"}\r\n          alt=\"Nothing to see here... \"\r\n          credit=\"Image by ceyda koc\"\r\n          cssClass=\"\"\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <main className=\"photo-container\">\r\n        <h2>{title}</h2>\r\n        <ul>\r\n          {jsx}\r\n        </ul>\r\n      </main>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(PhotoContainer);","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <section className=\"not-found\">\r\n    <h2>404</h2>\r\n    <h3>Page Not Found</h3>\r\n  </section>\r\n);\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport { Route, Switch, HashRouter } from 'react-router-dom';\r\nimport API_KEY from './config';\r\n\r\n// React Components\r\nimport Home from './Components/Home'\r\nimport MainNav from './Components/MainNav';\r\nimport SearchForm from './Components/SearchForm';\r\nimport PhotoContainer from './Components/PhotoContainer';\r\nimport NotFound from './Components/NotFound';\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tphotos  : [],\r\n\t\tquery   : '',\r\n\t\tloading : true\r\n\t};\r\n\r\n\thandleLoading = (bool = true) => {\r\n\t\tthis.setState({loading: bool});\r\n\t}\r\n\r\n\t/* fetch method for getting the photo data */\r\n\tperformSearch = query => {\r\n\t\tfetch(\r\n\t\t\t`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${API_KEY}&tags=${query}&per_page=20&sort=relevance&safe_search=1&format=json&nojsoncallback=1`\r\n\t\t)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(responseData =>\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tphotos  : responseData.photos.photo,\r\n\t\t\t\t\tquery   : query,\r\n\t\t\t\t\tloading : false\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\t.catch(error => console.log('Error in fetching data', error));\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<Route render={() => <SearchForm handleLoading={this.handleLoading} />} />\r\n\t\t\t\t<Route render={() => <MainNav handleLoading={this.handleLoading} /> } />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path={'/'} component={Home} />\r\n\t\t\t\t\t<Route path={'/search/:query'} render={ () => \r\n\t\t\t\t\t\t<PhotoContainer \r\n\t\t\t\t\t\t\tperformSearch={this.performSearch}\r\n\t\t\t\t\t\t\tphotos={this.state.photos}\r\n\t\t\t\t\t\t\tquery={this.state.query}\r\n\t\t\t\t\t\t\tloading={this.state.loading}\r\n\t\t\t\t\t\t\thandleLoading={this.handleLoading}\r\n\t\t\t\t\t\t/> } />\r\n\t\t\t\t\t<Route path={'/'} component={NotFound} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</HashRouter>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}